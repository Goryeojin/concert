spring.output.ansi.enabled=always
spring.jackson.default-property-inclusion=non_null

# H2 Database Config
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:test
spring.datasource.username=sa

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.sql.init.mode=always
spring.sql.init.continue-on-error=true

spring.datasource.hikari.maximum-pool-size=30

# JPA Config
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.show_sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.data-locations=classpath:data.sql

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

spring.redis.host=localhost
spring.redis.port=6379


# logging 레벨 설정
#logging.level.root=debug
#logging.level.org.springframework.cache=DEBUG
#logging.level.org.springframework.data.redis.cache=DEBUG

# Kafka 설정
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.listener.ack-mode=MANUAL
spring.kafka.consumer.group-id=concert
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

event.payment.topic=concert-payment